name: amazonlinux2

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always
  REDISVERSION: 7.0.9-1
  VERSION: 99.99.99

jobs:

  build:
    runs-on: ubuntu-latest
    container: amazonlinux:2
    env:
      osnick: amzn2
      arch: x86_64
    steps:
      - name: os deps
        run: |
          amazon-linux-extras install -y epel
          yum groupinstall -yqq 'Development Tools'
          yum install -yqq wget openssl-devel yum-utils
          yum -y install http://mirror.centos.org/centos/7/extras/x86_64/Packages/centos-release-scl-rh-2-3.el7.centos.noarch.rpm
          yum -y install http://mirror.centos.org/centos/7/extras/x86_64/Packages/centos-release-scl-2-3.el7.centos.noarch.rpm
          yum -y install http://mirror.centos.org/centos/7/sclo/x86_64/rh/Packages/l/llvm-toolset-7-clang-4.0.1-1.el7.x86_64.rpm
          yum install -yqq rh-python38-python rh-python38-python-pip

      - uses: actions/checkout@v3
      - uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable

      - name: install test deps
        run: |
          /opt/rh/rh-python38/root/usr/bin/pip install -r tests/requirements.txt
          wget -q https://redismodules.s3.amazonaws.com/redis-stack/dependencies/redis-${{env.REDISVERSION}}-Linux-${{env.osnick}}-${{env.arch}}.tgz -O redis.tgz
          tar -xpf redis.tgz
          rm *.tgz
          mv redis* redis
          chmod a+x redis/*

      - name: build debug
        run: |
          . scl_source enable llvm-toolset-7 || true
          make

      - name: build release
        run: |
          . scl_source enable llvm-toolset-7 || true
          make RELEASE=1

      - name: run tests
        run: |
          redis/redis-server --daemonize yes --loadmodule target/debug/libredis_state.so
          /opt/rh/rh-python38/root/usr/bin/pytest --junit-xml=results.xml

      - name: dist ramp to s3
        run: |
          ramp pack -m ramp.yml target/release/libredis_state.so -o libredis_state.Linux-${{env.osnick}}-${{env.arch}}.${{env.VERSION}}.zip
          s3cmd --access_key=${{secrets.AWS_ACCESS_KEY_ID}} \
            --secret_key=${{secrets.AWS_SECRET_ACCESS_KEY}} \
            --region=${{secrets.AWS_REGION}} \
            put -P *.zip \
            s3://redismodules/redisstatemachine/snapshots
